local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()

local Window = Rayfield:CreateWindow({
	Name = "Rayfield Example Window",
	LoadingTitle = "Rayfield Interface Suite",
	LoadingSubtitle = "by Sirius",
	ConfigurationSaving = {
		Enabled = true,
		FolderName = nil, -- Create a custom folder for your hub/game
		FileName = "Big Hub"
	},
        Discord = {
        	Enabled = false,
        	Invite = "sirius", -- The Discord invite code, do not include discord.gg/
        	RememberJoins = true -- Set this to false to make them join the discord every time they load it up
        },
	KeySystem = false, -- Set this to true to use our key system
	KeySettings = {
		Title = "Sirius Hub",
		Subtitle = "Key System",
		Note = "Join the discord (discord.gg/sirius)",
		FileName = "SiriusKey",
		SaveKey = true,
		GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
		Key = "Hello"
	}
})


local Tab = Window:CreateTab("Main", 4483362458) -- Title, Image

local Toggle = Tab:CreateToggle({
	Name = "Auto Punch",
	CurrentValue = false,
	Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(APC)
		_G.autopunch = APC;
	end,
})

task.spawn(function()
	while wait() do
		if _G.autopunch then
			game:GetService("ReplicatedStorage").RemoteEvent:FireServer({"Activate_Punch"})
			wait(0.1)
		end
	end
end)

local Label = Tab:CreateLabel("Do NOT Use auto punch or just punch if you Teleported into a wall!")

local areasTable = {}

for i=1,30 do
	table.insert(areasTable, i)
end


local Dropdown = Tab:CreateDropdown({
	Name = "Dropdown Example",
	Options = areasTable,
	CurrentOption = " ",
	Callback = function(AREA)
		_G.area = AREA;
	end,
})

local hrp = game.Players.LocalPlayer.Character.HumanoidRootPart


local Button = Tab:CreateButton({
	Name = "Teleport into the selected area's wall",
	Callback = function()

local walls = game:GetService("Workspace").Map.Stages.TerrainWalls[_G.area]:GetChildren()

for i,v in ipairs(walls) do
	if v:IsA("Part") then
		hrp.CFrame = v.CFrame
	end
end
	end,
})

local Toggle = Tab:CreateToggle({
	Name = "Auto Teleport to Selected World's Wall Every 30 Sec",
	CurrentValue = false,
	Callback = function(ATS)
		_G.autotpsel = ATS;
	end,
})

task.spawn(function()
	while wait() do
		if _G.autotpsel then
			local walls2 = game:GetService("Workspace").Map.Stages.TerrainWalls[_G.area]:GetChildren()
			for i,v in ipairs(walls2) do
				if v:IsA("Part") then
					hrp.CFrame = v.CFrame
				end
			end
			wait(30)
		end
	end
end)

local Toggle = Tab:CreateToggle({
	Name = "Auto Teleport to Current World's Walls Every 30 Sec (dont have to select anything)",
	CurrentValue = false,
	Callback = function(ATC)
		_G.autotpcur = ATC;
	end,
})

task.spawn(function()
	while wait() do
		if _G.autotpcur then
			local curwalls = game:GetService("Workspace").Map.Stages.TerrainWalls[game:GetService("Players").LocalPlayer.leaderstats.WORLD.Value]:GetChildren()


			for i,v in ipairs(curwalls) do
				if v:IsA("Part") then
					hrp.CFrame = v.CFrame
				end
			end
			wait(30)
		end
	end
end)




local Tab = Window:CreateTab("Area's", 4483362458) -- Title, Image

local Button = Tab:CreateButton({
	Name = "Teleport To Next Area",
	Callback = function()
		game:GetService("ReplicatedStorage").RemoteEvent:FireServer({"WarpPlrToOtherMap","Next"})
	end,
})

local Button = Tab:CreateButton({
	Name = "Teleport To Previous Area",
	Callback = function()
		game:GetService("ReplicatedStorage").RemoteEvent:FireServer({"WarpPlrToOtherMap","Previous"})
	end,
})

local Toggle = Tab:CreateToggle({
	Name = "Auto Teleport to Next Area Every 1 min",
	CurrentValue = false,
	Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(ARNX)
		_G.autoarnext = ARNX;
	end,
})

task.spawn(function()
	while wait() do
		if _G.autoarnext then
			game:GetService("ReplicatedStorage").RemoteEvent:FireServer({"WarpPlrToOtherMap","Next"})
			wait(60)
		end
	end
end)


local Toggle = Tab:CreateToggle({
	Name = "Auto Teleport to Previous Area Every 1 min",
	CurrentValue = false,
	Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(ARPR)
		_G.autoarprev = ARPR;
	end,
})

task.spawn(function()
	while wait() do
		if _G.autoarprev then
			game:GetService("ReplicatedStorage").RemoteEvent:FireServer({"WarpPlrToOtherMap","Previous"})
			wait(60)
		end
	end
end)


local Tab = Window:CreateTab("Safe Zones", 4483362458) -- Title, Image

local Button = Tab:CreateButton({
	Name = "Teleport To Current Area's Safe Zone ",
	Callback = function()
local safes = game:GetService("Workspace").Map.Stages.SafeZones[game:GetService("Players").LocalPlayer.leaderstats.WORLD.Value]

		for i,v in ipairs(safes) do
			if v.Name == "SafeZone_Part" then
				hrp.CFrame = v.CFrame
			end
		end
end,
})


local Button = Tab:CreateButton({
	Name = "Teleport To Selected Area's Safe Zone",
	Callback = function()
		local safes2 = game:GetService("Workspace").Map.Stages.SafeZones[_G.area]

		for i,v in ipairs(safes2) do
			if v.Name == "SafeZone_Part" then
				hrp.CFrame = v.CFrame
			end
		end
	end,
})

local Tab = Window:CreateTab("Misc/Webhook", 4483362458) -- Title, Image

local Slider = Tab:CreateSlider({
	Name = "Change Walk Speed",
	Range = {100, 1000},
	Increment = 10,
	Suffix = "Speed",
	CurrentValue = 100,
	Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(WS)
		game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = WS
	end,
})


local Input = Tab:CreateInput({
	Name = "Input Discord URL",
	PlaceholderText = "Discord URL",
	RemoveTextAfterFocusLost = false,
	Callback = function(WEBTEXT)
		_G.webhook = WEBTEXT;
	end,
})




local Toggle = Tab:CreateToggle({
	Name = "Enable Webhook",
	CurrentValue = false,
	Flag = "WebHook", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(WEBTOG)
		_G.webhooktoggle = WEBTOG;

HttpService = game:GetService("HttpService")

Webhook_URL = _G.webhook
	end,
})

task.spawn(function()
	while wait() do
		if _G.webhooktoggle then
			if _G.webhook ~= nil then
				local responce = syn.request(
				{
					Url = Webhook_URL,
					Method = 'POST',
					Headers = {
						['Content-Type'] = 'application/json'
					},
					Body = HttpService:JSONEncode({
						["content"] = "",
						["embeds"] = {{
							["title"] = "**Your Power Went UP!!!**",
							["description"] = game:GetService("Players").LocalPlayer.leaderstats.POWER.Value,
							["type"] = "rich",
							["color"] = tonumber(0xffffff),
							["fields"] = {
								{
									["name"] = "Username:",
									["value"] = game.Players.LocalPlayer.DisplayName,
									["inline"] = true
								}
							}
						}}
					})
				}
				)
			end
		end
		wait(60)
	end
end)



local Tab = Window:CreateTab("Credits", 4483362458) -- Title, Image

local Paragraph = Tab:CreateParagraph({Title = "Credits Below", Content = "!KatagiriYuuchi#7765"})

local Paragraph = Tab:CreateParagraph({Title = "Join My Discord Server", Content = "https://discord.gg/zjVty9E3"})

local Button = Tab:CreateButton({
	Name = "Copy Discord Link",
	Callback = function()
		setclipboard("https://discord.gg/zjVty9E3")
		wait(0.1)
		Rayfield:Notify({
			Title = "Success",
			Content = "Successfully Copied Discord Link",
			Duration = 6.5,
			Image = 4483362458,
			Actions = { -- Notification Buttons
				Ignore = {
					Name = "Okay!",
					Callback = function()
						print("The user tapped Okay!")
					end
				},
			},
		})
end,
})
